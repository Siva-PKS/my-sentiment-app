name: Update clone stats in README

on:
  schedule:
    - cron: "17 0 * * *"   # daily @ 00:17 UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Update README with clone stats
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo  = context.repo.repo;

            // Get traffic clones (last 14 days)
            let total = 0, unique = 0, lines = [];
            try {
              const { data } = await github.request('GET /repos/{owner}/{repo}/traffic/clones', { owner, repo });
              total = data?.count ?? 0;
              unique = data?.uniques ?? 0;
              lines = (data?.clones ?? []).map(d => `- ${d.timestamp.slice(0,10)}: ${d.count} clones (${d.uniques} unique)`);
            } catch (e) {
              core.warning(`Traffic API error: ${e.status || ''} ${e.message}`);
              lines = ['- (unable to fetch traffic data right now)'];
            }

            const stamp = new Date().toISOString().replace('T',' ').replace('Z',' UTC');
            const newBlock = [
              `Last updated: **${stamp}**`,
              ``,
              `- **Total clones (14 days):** \`${total}\``,
              `- **Unique cloners (14 days):** \`${unique}\``,
              ``,
              `<details><summary>Daily breakdown</summary>`,
              ``,
              ...(lines.length ? lines : ['- (no data)']),
              ``,
              `</details>`
            ].join('\n');

            const fs = require('fs');
            const path = 'README.md';
            if (!fs.existsSync(path)) {
              core.setFailed('README.md not found at repo root');
              return;
            }
            let readme = fs.readFileSync(path, 'utf8');

            const START = '<!-- CLONE-STATS:START -->';
            const END   = '<!-- CLONE-STATS:END -->';
            const pattern = new RegExp(`${START}[\\s\\S]*?${END}`, 'm');

            if (!pattern.test(readme)) {
              // Append section if markers missing
              readme = readme.trimEnd() + `\n\n## ðŸ“Š Clone Stats\n\n${START}\n${newBlock}\n${END}\n`;
            } else {
              readme = readme.replace(pattern, `${START}\n${newBlock}\n${END}`);
            }

            fs.writeFileSync(path, readme, 'utf8');

            // Commit
            await github.request('PUT /repos/{owner}/{repo}/contents/{path}', {
              owner, repo, path,
              message: 'docs: update clone stats in README [bot]',
              content: Buffer.from(readme, 'utf8').toString('base64'),
              sha: (await github.request('GET /repos/{owner}/{repo}/contents/{path}', { owner, repo, path })).data.sha
            });
